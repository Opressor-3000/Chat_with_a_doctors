""" create disease, anamnesis, diagnosis tables

Revision ID: ad032a2873ce
Revises: b414b78db4f8
Create Date: 2024-01-24 12:39:05.326596

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad032a2873ce'
down_revision: Union[str, None] = 'b414b78db4f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('disease',
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('creater_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['creater_id'], ['permission.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('title')
    )
    op.create_table('anamnesis',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('disease_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['disease_id'], ['disease.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'disease_id', name='account_disease_uc')
    )
    op.create_table('diagnosis',
    sa.Column('text', sa.String(length=1024), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('feedback', sa.Column('chatuserr_id', sa.Integer(), nullable=False))
    op.drop_constraint('feedback_chat_id_fkey', 'feedback', type_='foreignkey')
    op.drop_constraint('feedback_user_id_fkey', 'feedback', type_='foreignkey')
    op.create_foreign_key(None, 'feedback', 'chatuser', ['chatuserr_id'], ['id'])
    op.drop_column('feedback', 'user_id')
    op.drop_column('feedback', 'chat_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('feedback', sa.Column('chat_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('feedback', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'feedback', type_='foreignkey')
    op.create_foreign_key('feedback_user_id_fkey', 'feedback', 'user', ['user_id'], ['id'])
    op.create_foreign_key('feedback_chat_id_fkey', 'feedback', 'chat', ['chat_id'], ['id'])
    op.drop_column('feedback', 'chatuserr_id')
    op.drop_table('diagnosis')
    op.drop_table('anamnesis')
    op.drop_table('disease')
    # ### end Alembic commands ###
