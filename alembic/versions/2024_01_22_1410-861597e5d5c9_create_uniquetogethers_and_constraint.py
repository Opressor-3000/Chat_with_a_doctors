"""create UniqueTogethers and Constraint

Revision ID: 861597e5d5c9
Revises: ad42d2bdbe0f
Create Date: 2024-01-22 14:10:38.795845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '861597e5d5c9'
down_revision: Union[str, None] = 'ad42d2bdbe0f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('account', 'password',
               existing_type=postgresql.BYTEA(),
               type_=sa.String(length=250),
               existing_nullable=False)
    op.alter_column('account', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('account_id_seq'::regclass)"))
    op.create_unique_constraint(None, 'account', ['uuid'])
    op.alter_column('agency', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('agency', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('agency_id_seq'::regclass)"))
    op.add_column('certificate', sa.Column('cretificate_id', sa.String(length=64), nullable=False))
    op.alter_column('certificate', 'doctor_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('certificate', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('certificate', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.create_unique_constraint(None, 'certificate', ['cretificate_id'])
    op.drop_constraint('certificate_speciality_id_fkey', 'certificate', type_='foreignkey')
    op.drop_column('certificate', 'speciality_id')
    op.alter_column('chat', 'doctor_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('chat', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('chat', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('chat_id_seq'::regclass)"))
    op.drop_constraint('chat_speciality_id_fkey', 'chat', type_='foreignkey')
    op.drop_column('chat', 'speciality_id')
    op.alter_column('chatuser', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('chatuser', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('chatuser_id_seq'::regclass)"))
    op.alter_column('doctor', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('doctor', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('doctor_id_seq'::regclass)"))
    op.create_unique_constraint('account_speciality_uc', 'doctor', ['account_id', 'speciality_id'])
    op.drop_constraint('doctor_speciality_id_fkey', 'doctor', type_='foreignkey')
    op.drop_constraint('doctor_account_id_fkey', 'doctor', type_='foreignkey')
    op.create_foreign_key(None, 'doctor', 'account', ['account_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key(None, 'doctor', 'speciality', ['speciality_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.alter_column('feedback', 'doctor_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('feedback', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('feedback', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('feedback', 'chat_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('feedback', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('gender', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('gender', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint('gender_creater_id_key', 'gender', type_='unique')
    op.alter_column('group', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('group', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('group_id_seq'::regclass)"))
    op.alter_column('message', 'chatuserr_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('message', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('message', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('messagestatus', 'message_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('messagestatus', 'chatuserr_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('messagestatus', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('permission', 'account_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('permission', 'group_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('permission', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('permission', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('permission_id_seq'::regclass)"))
    op.create_unique_constraint('account_of_group_uc', 'permission', ['account_id', 'group_id'])
    op.alter_column('qr', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('qr', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('qr_id_seq'::regclass)"))
    op.alter_column('rating', 'chat_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('rating', 'doctor_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('rating', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.alter_column('rating', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('speciality', 'creater_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False)
    op.create_unique_constraint(None, 'speciality', ['title'])
    op.alter_column('user', 'avatar',
               existing_type=postgresql.BYTEA(),
               type_=sa.String(length=250),
               nullable=True)
    op.alter_column('user', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
    op.drop_constraint('user_qr_id_fkey', 'user', type_='foreignkey')
    op.drop_constraint('user_gender_id_fkey', 'user', type_='foreignkey')
    op.drop_constraint('user_account_id_fkey', 'user', type_='foreignkey')
    op.create_foreign_key(None, 'user', 'gender', ['gender_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key(None, 'user', 'qr', ['qr_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key(None, 'user', 'account', ['account_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.create_foreign_key('user_account_id_fkey', 'user', 'account', ['account_id'], ['id'])
    op.create_foreign_key('user_gender_id_fkey', 'user', 'gender', ['gender_id'], ['id'])
    op.create_foreign_key('user_qr_id_fkey', 'user', 'qr', ['qr_id'], ['id'])
    op.alter_column('user', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('user_id_seq'::regclass)"))
    op.alter_column('user', 'avatar',
               existing_type=sa.String(length=250),
               type_=postgresql.BYTEA(),
               nullable=False)
    op.drop_constraint(None, 'speciality', type_='unique')
    op.alter_column('speciality', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('rating', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('rating', 'user_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('rating', 'doctor_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('rating', 'chat_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('qr', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('qr_id_seq'::regclass)"))
    op.alter_column('qr', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint('account_of_group_uc', 'permission', type_='unique')
    op.alter_column('permission', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('permission_id_seq'::regclass)"))
    op.alter_column('permission', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('permission', 'group_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('permission', 'account_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('messagestatus', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('messagestatus', 'chatuserr_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('messagestatus', 'message_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('message', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('message', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('message', 'chatuserr_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('group', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('group_id_seq'::regclass)"))
    op.alter_column('group', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.create_unique_constraint('gender_creater_id_key', 'gender', ['creater_id'])
    op.alter_column('gender', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('gender', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('feedback', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('feedback', 'chat_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('feedback', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('feedback', 'user_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('feedback', 'doctor_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'doctor', type_='foreignkey')
    op.drop_constraint(None, 'doctor', type_='foreignkey')
    op.create_foreign_key('doctor_account_id_fkey', 'doctor', 'account', ['account_id'], ['id'])
    op.create_foreign_key('doctor_speciality_id_fkey', 'doctor', 'speciality', ['speciality_id'], ['id'])
    op.drop_constraint('account_speciality_uc', 'doctor', type_='unique')
    op.alter_column('doctor', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('doctor_id_seq'::regclass)"))
    op.alter_column('doctor', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('chatuser', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('chatuser_id_seq'::regclass)"))
    op.alter_column('chatuser', 'user_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.add_column('chat', sa.Column('speciality_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('chat_speciality_id_fkey', 'chat', 'speciality', ['speciality_id'], ['id'])
    op.alter_column('chat', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('chat_id_seq'::regclass)"))
    op.alter_column('chat', 'user_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('chat', 'doctor_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.add_column('certificate', sa.Column('speciality_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('certificate_speciality_id_fkey', 'certificate', 'speciality', ['speciality_id'], ['id'])
    op.drop_constraint(None, 'certificate', type_='unique')
    op.alter_column('certificate', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('certificate', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('certificate', 'doctor_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('certificate', 'cretificate_id')
    op.alter_column('agency', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('agency_id_seq'::regclass)"))
    op.alter_column('agency', 'creater_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_constraint(None, 'account', type_='unique')
    op.alter_column('account', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('account_id_seq'::regclass)"))
    op.alter_column('account', 'password',
               existing_type=sa.String(length=250),
               type_=postgresql.BYTEA(),
               existing_nullable=False)
    # ### end Alembic commands ###
